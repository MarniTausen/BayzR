// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mfactor_cpp
Rcpp::IntegerVector mfactor_cpp(Rcpp::List fact_list);
RcppExport SEXP _BayzR_mfactor_cpp(SEXP fact_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type fact_list(fact_listSEXP);
    rcpp_result_gen = Rcpp::wrap(mfactor_cpp(fact_list));
    return rcpp_result_gen;
END_RCPP
}
// rbayz_cpp
Rcpp::List rbayz_cpp(Rcpp::Formula modelFormula, SEXP VE, Rcpp::DataFrame inputData, Rcpp::IntegerVector chain, int verbose);
RcppExport SEXP _BayzR_rbayz_cpp(SEXP modelFormulaSEXP, SEXP VESEXP, SEXP inputDataSEXP, SEXP chainSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Formula >::type modelFormula(modelFormulaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type VE(VESEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type chain(chainSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(rbayz_cpp(modelFormula, VE, inputData, chain, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BayzR_mfactor_cpp", (DL_FUNC) &_BayzR_mfactor_cpp, 1},
    {"_BayzR_rbayz_cpp", (DL_FUNC) &_BayzR_rbayz_cpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_BayzR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
